--验证性实验

--1

USE LMS
GO
BEGIN TRAN 
SELECT * FROM C
INSERT INTO C VALUES('C08', '决策支持系统', NULL, 3,NULL)
SELECT * FROM C
ROLLBACK TRAN
SELECT * FROM C

--2

USE LMS
GO 
BEGIN TRAN Mytran
SELECT * FROM C
INSERT INTO C VALUES('C09', '信息分析与预测', NULL,4,NULL)
SAVE TRAN POINT1
INSERT INTO C VALUES('C10', '数据挖掘', NULL, 3,NULL)
SELECT * FROM C
ROLLBACK TRAN POINT1
SELECT * FROM C

--3

--① 在S表建立建立如下触发器
CREATE TRIGGER TRIGONS
ON S FOR UPDATE
AS
SELECT * FROM DELETED
SELECT * FROM INSERTED
--选中上述触发器创建语句并执行，然后输入下面语句：
UPDATE S 
SET DEPT ='计算机系' WHERE DEPT='CS'

SELECT * FROM S

--② 在S表上建立下面触发器：
CREATE TRIGGER TEMPTABLE
ON S FOR INSERT
AS
SELECT * FROM INSERTED
ROLLBACK TRAN
--执行上述触发器后在S表中插入数据
INSERT INTO S(SNO,SNAME) VALUES('10012','ZXX')

SELECT * FROM S

DELETE FROM S WHERE SName = 'ZXX';

--③ 在C表中加入一列seleNum表示选课数量，在SC表上插入一条选课记录后，将C表中
--对应的课程的seleNum值加1。
CREATE TRIGGER SELECTCOURSE
ON SC FOR INSERT
AS
IF (SELECT COUNT(*) FROM INSERTED)>1 
BEGIN
PRINT 'YOU CAN INSERT ONE RECORD ONCE. SO THE RECORDS ARE NOT INSERTED 
INTO THE TABLE'
ROLLBACK TRAN
END
ELSE
BEGIN
 DECLARE @CNO VARCHAR(10)
 SELECT @CNO=CNO FROM INSERTED
 UPDATE C
 SET seleNum=seleNum+1 WHERE CNO=@CNO
 PRINT 'THE NUMBER OF STUDENTS WHO SELECTED'+@CNO +' HAS BEEN ADDED'
END

SELECT * FROM SC

SELECT * FROM C

INSERT INTO SC (SNO, CNO, SCORE)
VALUES ('200512', 'C01', 80)
INSERT INTO SC (SNO, CNO, SCORE)
VALUES ('200518', 'C02', 90)

DELETE FROM SC WHERE SNO IN ('200512') AND CNO IN ('C01')

UPDATE C SET seleNum = seleNum - 1 WHERE CNO = 'C01'

--4

--① 修改触发器 

CREATE TRIGGER DELS 
ON S FOR DELETE 
AS
DECLARE @DEPT VARCHAR(20)
SELECT @DEPT=DEPT FROM DELETED
IF @DEPT='计算机系'
BEGIN
 PRINT 'YOU CAN NOT DELETE THE STUDENT FROM CS'
 ROLLBACK
END

select * from S

DELETE FROM S WHERE SNO = '200512'

INSERT INTO S (SNO,Sname , dept,age,sex)
VALUES ('200512', '李勇', '计算机系', 20, '男')

--执行上面的触发器，发现错误，则修改触发器。
ALTER TRIGGER DELS 
ON S FOR DELETE 
AS
DECLARE @DEPT VARCHAR(20)
SELECT @DEPT=DEPT FROM DELETED
IF @DEPT='计算机系'
BEGIN
 PRINT 'YOU CAN NOT DELETE THE STUDENT FROM CS'
 ROLLBACK
END
--② 删除触发器 

DROP TRIGGER DELS

SELECT * FROM sys.triggers WHERE name = 'DELS'


--设计性实验

--1

ALTER TABLE S
DROP CONSTRAINT PK_SNO

CREATE TRIGGER TRG_S_INSERT
ON S
INSTEAD OF INSERT
AS
BEGIN
    -- 检查插入的记录中是否存在空的 SNO
    IF EXISTS (SELECT 1 FROM INSERTED WHERE SNO IS NULL)
    BEGIN
        RAISERROR('SNO cannot be NULL.', 16, 1);
        ROLLBACK;
        RETURN;
    END;

    -- 检查插入的记录中是否存在重复的 SNO
    IF EXISTS (SELECT 1 FROM INSERTED i WHERE EXISTS (SELECT 1 FROM S s WHERE s.SNO = i.SNO))
    BEGIN
        RAISERROR('Duplicate SNO values are not allowed.', 16, 1);
        ROLLBACK;
        RETURN;
    END;

    -- 插入符合要求的记录到 S 表
    INSERT INTO S (SNO, SNAME, DEPT, AGE, SEX)
    SELECT SNO, SNAME, DEPT, AGE, SEX
    FROM INSERTED;
END;

--验证触发器
-- 插入一个有效的记录
INSERT INTO S (SNO, SNAME, DEPT, AGE, SEX) VALUES ('200001', '张三', '计算机系', 20, '男');

SELECT * FROM S;

-- 插入一个重复的 SNO
INSERT INTO S (SNO, SNAME, DEPT, AGE, SEX) VALUES ('200001', '李四', '信息系', 19, '男');

-- 插入一个空的 SNO
INSERT INTO S (SNO, SNAME, DEPT, AGE, SEX) VALUES (NULL, '王五', '数学系', 18, '女');


-- 删除插入的记录
DELETE FROM S WHERE SNO = '200001';
DELETE FROM S WHERE SNO = '200001';
DELETE FROM S WHERE SNO IS NULL;

--2

CREATE TRIGGER TRG_C_UPDATE
ON C
FOR UPDATE
AS
BEGIN
    IF UPDATE(CREDIT)
    BEGIN
        DECLARE @NewCredit INT;
        SELECT @NewCredit = CREDIT FROM INSERTED;

        IF @NewCredit > 6
        BEGIN
            RAISERROR('CREDIT cannot exceed 6.', 16, 1);
            ROLLBACK;
            RETURN;
        END;
    END;
END;



--验证触发器

SELECT * FROM C;

-- 插入符合要求的记录
INSERT INTO C (CNO, CNAME, CREDIT)
VALUES ('C07', '课程1', 5);

INSERT INTO C (CNO, CNAME, CREDIT)
VALUES ('C08', '课程2', 4);


DELETE FROM C WHERE CNO IN ('C07', 'C08');


-- 修改 C 表中 CREDIT 字段的值，将其增加到超过 6，触发器应该阻止修改操作
UPDATE C
SET CREDIT = 8
WHERE CNO = 'C07';

-- 修改 C 表中 CREDIT 字段的值，将其修改为符合要求的值
UPDATE C
SET CREDIT = 5
WHERE CNO = 'C08';








